// –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –±–æ—Ç–∞
use teloxide::types::{InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, KeyboardMarkup};

/// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
pub fn main_menu() -> KeyboardMarkup {
    KeyboardMarkup::new(vec![
        vec![
            KeyboardButton::new("üìù –ó–∞–¥–∞—á–∏"),
            KeyboardButton::new("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"),
        ],
        vec![
            KeyboardButton::new("üìÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª"),
            KeyboardButton::new("‚ùì –ü–æ–º–æ—â—å"),
        ],
    ])
    .resize_keyboard(true)
}

/// –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏
pub fn todo_actions(todo_id: i32) -> InlineKeyboardMarkup {
    InlineKeyboardMarkup::new(vec![
        vec![
            InlineKeyboardButton::callback("‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ", format!("complete_{}", todo_id)),
            InlineKeyboardButton::callback("‚ùå –£–¥–∞–ª–∏—Ç—å", format!("delete_{}", todo_id)),
        ],
        vec![
            InlineKeyboardButton::callback("‚è∞ –ù–∞–ø–æ–º–Ω–∏—Ç—å", format!("remind_{}", todo_id)),
        ],
    ])
}

/// –ú–µ–Ω—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤
pub fn conversion_menu(file_type: &str) -> InlineKeyboardMarkup {
    match file_type {
        "image" => InlineKeyboardMarkup::new(vec![
            vec![
                InlineKeyboardButton::callback("‚Üí PNG", "convert_png"),
                InlineKeyboardButton::callback("‚Üí JPEG", "convert_jpeg"),
            ],
            vec![
                InlineKeyboardButton::callback("‚Üí WebP", "convert_webp"),
                InlineKeyboardButton::callback("üîÑ –°–∂–∞—Ç—å", "compress"),
            ],
        ]),
        "document" => InlineKeyboardMarkup::new(vec![
            vec![
                InlineKeyboardButton::callback("‚Üí PDF", "convert_pdf"),
            ],
        ]),
        _ => InlineKeyboardMarkup::new(Vec::<Vec<InlineKeyboardButton>>::new()),
    }
}

/// –ö–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
pub fn confirmation_keyboard(action: &str, id: i32) -> InlineKeyboardMarkup {
    InlineKeyboardMarkup::new(vec![
        vec![
            InlineKeyboardButton::callback("‚úÖ –î–∞", format!("{}_{}_yes", action, id)),
            InlineKeyboardButton::callback("‚ùå –ù–µ—Ç", format!("{}_{}_no", action, id)),
        ],
    ])
}
